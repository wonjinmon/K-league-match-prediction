- k_datasets에 수집한 자료들 있음
2021 ~ 23년 k리그 1 데이터. k리그 1은 총 38라운드 중, 35라운드. 수집할 당시 35라운드 까지 진행.

>>> 11/28 현재까지 37라운드 진행되서 36,37라운드 승부 예측을 했음
  + 원래는 (라운드, 홈 팀, 원정 팀)만 모델에 넣어서 학습하려했으나 안되는 방식임
	따라서 36, 37라운드의 데이터를 전에 수집했던 구조에 맞게 전처리해서 모델에 넣음

2021 : 21시즌
2022 : 22시즌
2023: 35라운드까지 

K_columns.xlsx : Listly로 수집할때 열 이름은 따로 수집

K_trsfmk_ 2021 ~ 2023 : 트랜스퍼 마켓에서 수집한 데이터

---------------------------------------------------------------

이렇게 수집한 데이터를 전처리하는 코드는 " Data-preprocessing.ipynb " 
원래는 K-League-data.csv 처럼 1332개, 52개의 ( 틀릴 수도 있음 들어가서 행,열 확인) 데이터였음
	* 이런 데이터셋 형태로 학습시켰을때 정확도 60퍼언저리


하지만 다시 전처리했음 " Data-preprocessing.ipynb " 의 new_df 부분
   600개, 100개 정도의 데이터로 변경(K-League-data2.csv) ----->  이전엔 1개의 라운드에 대해 홈팀의 데이터, 원정팀의 데이터 2개의 행을 가지고 있었으나 1개의 라운드에 대해 1개의 열을 갖도록 
행을 합침.  그래서 df shape이 저렇게 바뀐것
	* 이렇게 학습 시키고 예측하니 성능 80~98퍼까지


---------------------------------------------------------------

  
Data-visualization : 시각화랑 간단한 기술통계
추가로 상관관계 홈 / 원정 따로 분석 분석해놓았음
너무 간단하게 해서 추가해야할 것 같기도?

---------------------------------------------------------------


Train_V2.ipynb : 학습시키는 코드 ( train.ipynb는 무시하셈)

robust스케일했음. 다양한 모델을 사용해서 결과 분석했음
confusion metrix 구해놨으니 그거 표로 만들어서 ppt에 넣으면 될듯

pca적용도 했음
pca하니까 성능 떨어졌음

변수 선택법도 적용했음
이랬더니 변수 4개로 성능이 90% 이상 나왔음


---------------------------------------------------------------


MakeTestDF.ipynb

23년 36라운드 37라운드 데이터를 전처리해서 모델에 넣을 수 있게 만듬
( 3637R.xlse -->>  K-League-Test3536)     3536 오타인데 걍 안고칠게요 의도는 3637이 맞음


---------------------------------------------------------------


predict ipynb 
최종 예측을 함

그냥 make test df에서 만든거 에 맞춰서 학습하고 
성능이 좋았던 모델으로만 예측

